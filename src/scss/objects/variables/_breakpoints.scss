/* Responsiveness ----------------------------------------------------------- */

$grid-x-small: 320px;
$grid-small: 480px;
$grid-six-hundreds: 600px;
$grid-medium: 768px;
$grid-large: 1023px;
$grid-smaller-widescreen: 1300px;
$grid-small-widescreen: 1400px;
$grid-widescreen: 1440px;

// CSS variable breakpoints
:root {
    --grid-x-small: 320px;
    --grid-small: 480px;
    --grid-six-hundreds: 600px;
    --grid-medium: 768px;
    --grid-large: 1024px;
    --grid-smaller-widescreen: 1300px;
    --grid-small-widescreen: 1400px;
    --grid-widescreen: 1440px;
}

$x-small-down: 'x-small';
$small: 'small';
$small-down: 'small-down';
$small-up: 'small-up';
$six-hundreds: 'six-hundreds';
$six-hundreds-down: 'six-hundreds-down';
$six-hundreds-up: 'six-hundreds-up';
$medium: 'medium';
$medium-down: 'medium-down';
$medium-up: 'medium-up';
$large: 'large';
$large-down: 'large-down';
$large-up: 'large-up';
$smaller-widescreen-up: 'smaller-widescreen-up';
$smaller-widescreen-down: 'smaller-widescreen-down';
$widescreen-up: 'widescreen-up';
$widescreen-down: 'widescreen-down';

// The `$breakpoints` list is used to build our media queries.
// You can use these in the media-query mixin.
$breakpoints: (
    $x-small-down '(max-width: #{$grid-x-small})',
    $small-down '(max-width: #{$grid-small})',
    $small '(min-width: #{$grid-small + 1}) and (max-width: #{$grid-medium})',
    $small-up '(min-width: #{$grid-small + 1})',
    $six-hundreds-down '(max-width: #{$grid-six-hundreds})',
    $six-hundreds '(min-width: #{$grid-six-hundreds + 1}) and (max-width: #{$grid-medium})',
    $six-hundreds-up '(min-width: #{$grid-six-hundreds + 1})',
    $medium-down '(max-width: #{$grid-medium})',
    $medium '(min-width: #{$grid-medium + 1}) and (max-width: #{$grid-large})',
    $medium-up '(min-width: #{$grid-medium + 1})',
    $large-down '(max-width: #{$grid-large})',
    $large '(min-width: #{$grid-large + 1}) and (max-width: #{$grid-widescreen})',
    $large-up '(min-width: #{$grid-large + 1})',
    $smaller-widescreen-up '(min-width: #{$grid-smaller-widescreen + 1})',
    $smaller-widescreen-down '(max-width: #{$grid-smaller-widescreen})',
    $widescreen-down '(max-width: #{$grid-widescreen})',
    $widescreen-up '(min-width: #{$grid-widescreen + 1})'
);

// Media query mixin for `$breakpoints`
@mixin respond-to($media-query) {
    $breakpoint-found: false;
    @each $breakpoint in $breakpoints {
        $name: nth($breakpoint, 1);
        $declaration: nth($breakpoint, 2);
        @if $media-query == $name and $declaration {
            $breakpoint-found: true;
            @media only screen and #{$declaration} {
                @content;
            }
        }
    }
    @if $breakpoint-found == false {
        @warn 'Breakpoint "#{$media-query}" does not exist';
    }
}

/*
Usage example:

    @include respond-to('large-down') {
        margin: 16px auto;
    }

*/

/* -------------------------------------------------------------------------- */
